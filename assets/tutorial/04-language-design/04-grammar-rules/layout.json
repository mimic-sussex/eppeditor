[
  {
    "2": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 0,
      "w": 3,
      "h": 2
    },
    "3": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 0,
      "w": 3,
      "h": 2
    },
    "6": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 0,
      "w": 3,
      "h": 2
    },
    "8": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 0,
      "w": 3,
      "h": 2,
      "id": "_gmyj9yl3n"
    },
    "12": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 0,
      "w": 3,
      "h": 2,
      "id": "_gmyj9yl3n"
    },
    "id": "_gmyj9yl3n",
    "data": {
      "id": "_gmyj9yl3n",
      "type": "liveCodeEditor",
      "name": "liveCodeEditor_gmyj9yl3n",
      "background": "#151515",
      "lineNumbers": true,
      "hasFocus": true,
      "theme": "icecoder",
      "grammarSource": "/languages/new/grammar.ne",
      "liveCodeSource": "",
      "content": "// Test out your new live coding language here!",
      "grammar": "# GRAMMAR EDITOR\n\n# Lexer [or tokenizer] definition with language lexemes [or tokens]\n@{%\n\tconst lexer = moo.compile({ \n    \t// write the Regular Expressions for your tokens here \n\n\t});\n\n%}\n\n# Pass your lexer object using the @lexer option\n@lexer lexer\n\n# Grammar definition in the Extended Backus Naur Form (EBNF)\nmain -> _\n\n# Whitespace\n\n_  -> wschar:*\n{% function(d) { return null; } %}\n\n__ -> wschar:+\n{% function(d) { return null; } %}\n\nwschar -> %ws\n{% id %}\n"
    },
    "hasFocus": false
  },
  {
    "2": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 0,
      "y": 0,
      "w": 3,
      "h": 9
    },
    "3": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 0,
      "y": 0,
      "w": 3,
      "h": 9
    },
    "6": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 0,
      "y": 0,
      "w": 3,
      "h": 9
    },
    "8": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 0,
      "y": 0,
      "w": 3,
      "h": 9,
      "id": "_zzaicqi4e"
    },
    "12": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "x": 0,
      "y": 0,
      "w": 3,
      "h": 9,
      "id": "_zzaicqi4e"
    },
    "id": "_zzaicqi4e",
    "data": {
      "id": "_zzaicqi4e",
      "type": "grammarEditor",
      "name": "grammarEditor_zzaicqi4e",
      "background": "#151515",
      "lineNumbers": true,
      "hasFocus": true,
      "theme": "monokai",
      "grammarSource": "/languages/new/grammar.ne",
      "content": "# GRAMMAR EDITOR\n\n# Lexer [or tokenizer] definition with language lexemes [or tokens]\n@{%\n\n\tconst lexer = moo.compile({ \n   \t// write the Regular Expressions for your tokens here \n    convol1:  /convol1/,                         \n    heart:    /heart/,   \n    click:    /click/,\n\t\tws: { match: /\\s+/, lineBreaks: true }\n\t});\n\n%}\n\n\n\n# Pass your lexer object using the @lexer option\n@lexer lexer\n\n\n\n# Grammar definition in the Extended Backus Naur Form (EBNF)\n\nmain -> _ Statement _\n{%\n\t// JS `arrow` function declaration\n\td => ( { \"@lang\": d[1] } )\n%}\n\nStatement -> %convol1\n{% \n  d => [{\n    '@spawn': {\n      '@sigp': {\n        '@params': [{        \n          '@sigp': { \n            '@params': [{\n                '@num': { value: 1 }\n              },\n              {\n                '@string': 'convol1'\n              }\n            ],\n            '@func': { value: 'loop'  }\n          }\n        }],\n        '@func' : {\n          value: \"dac\"\n        }\n      }\n    }\n  }]\n%}\n|\n%heart\n{% \n  d => [{\n    '@spawn': {\n      '@sigp': {\n        '@params': [{        \n          '@sigp': { \n            '@params': [{\n                '@num': { value: 1 }\n              },\n              {\n                '@string': 'heart'\n              }\n            ],\n            '@func': { value: 'loop'  }\n          }\n        }],\n        '@func' : {\n          value: \"dac\"\n        }\n      }\n    }\n  }]\n%}\n|\n%click\n{% \n  d => [{\n    '@spawn': {\n      '@sigp': {\n        '@params': [{        \n          '@sigp': { \n            '@params': [{\n                '@num': { value: 1 }\n              },\n              {\n                '@string': 'click'\n              }\n            ],\n            '@func': { value: 'loop'  }\n          }\n        }],\n        '@func' : {\n          value: \"dac\"\n        }\n      }\n    }\n  }]\n%}\n\n# Whitespace\n\n_  -> wschar:*\n{%\n\t// JS anonymous function declaration  \n\tfunction(d) { return null; } \n%}\n\n__ -> wschar:+\n{% \nfunction(d) { return null; } \n%}\n\nwschar -> %ws\n{% id %}\n"
    },
    "hasFocus": true
  },
  {
    "2": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 3,
      "w": 3,
      "h": 2
    },
    "3": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 3,
      "w": 3,
      "h": 2
    },
    "6": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 3,
      "w": 3,
      "h": 2
    },
    "8": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 3,
      "w": 3,
      "h": 2
    },
    "12": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 3,
      "w": 3,
      "h": 2,
      "id": "_qpwdp0rwp"
    },
    "id": "_qpwdp0rwp",
    "data": {
      "id": "_qpwdp0rwp",
      "type": "liveCodeParseOutput",
      "name": "liveCodeParseOutput_qpwdp0rwp",
      "background": "rgba(25, 25, 25, 0.3)",
      "lineNumbers": true,
      "hasFocus": true,
      "theme": "icecoder"
    },
    "hasFocus": false
  },
  {
    "2": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 7,
      "w": 3,
      "h": 2
    },
    "3": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 7,
      "w": 3,
      "h": 2
    },
    "6": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 7,
      "w": 3,
      "h": 2
    },
    "8": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 7,
      "w": 3,
      "h": 2
    },
    "12": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 7,
      "w": 3,
      "h": 2,
      "id": "_sstxj3wvh"
    },
    "id": "_sstxj3wvh",
    "data": {
      "id": "_sstxj3wvh",
      "type": "dspCode",
      "name": "dspCode_sstxj3wvh",
      "background": "rgba(25, 25, 25, 0.3)",
      "lineNumbers": true,
      "hasFocus": true,
      "theme": "icecoder"
    },
    "hasFocus": false
  },
  {
    "2": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 5,
      "w": 3,
      "h": 2
    },
    "3": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 5,
      "w": 3,
      "h": 2
    },
    "6": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 5,
      "w": 3,
      "h": 2
    },
    "8": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 5,
      "w": 3,
      "h": 2
    },
    "12": {
      "fixed": false,
      "resizable": true,
      "draggable": true,
      "customDragger": false,
      "customResizer": false,
      "min": {},
      "max": {},
      "x": 3,
      "y": 5,
      "w": 3,
      "h": 2,
      "id": "_cpv4ta4xf"
    },
    "id": "_cpv4ta4xf",
    "data": {
      "id": "_cpv4ta4xf",
      "type": "grammarCompileOutput",
      "name": "grammarCompileOutput_cpv4ta4xf",
      "background": "rgba(20, 20, 20, 0.3)",
      "lineNumbers": true,
      "hasFocus": true,
      "theme": "icecoder"
    },
    "hasFocus": false
  }
]