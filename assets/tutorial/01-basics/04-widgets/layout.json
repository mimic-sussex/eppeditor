[
  {
    "2": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 0,
      "w": 2,
      "h": 2
    },
    "3": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 0,
      "w": 2,
      "h": 2
    },
    "6": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 0,
      "w": 2,
      "h": 2
    },
    "8": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 0,
      "w": 2,
      "h": 2
    },
    "12": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 0,
      "w": 2,
      "h": 2,
      "id": "_as2qvonml"
    },
    "id": "_as2qvonml",
    "data": {
      "id": "_as2qvonml",
      "type": "liveCodeEditor",
      "name": "liveCodeEditor_as2qvonml",
      "background": "#151515",
      "lineNumbers": true,
      "hasFocus": true,
      "theme": "icecoder",
      "grammarSource": "/languages/default/grammar.ne",
      "liveCodeSource": "",
      "content": "// Press cmd-Enter [Mac] OR ctrl-Enter [Win/Linux] to evaluate this code and playback sound! \n\n>{{300}sin, {1000}sin}mul;\n\n// Press cmd-. [Mac] OR ctrl-. [Win/Linux] to stop sound! ",
      "grammar": "# GRAMMAR EDITOR\n# DEFAULT LANGUAGE GRAMMAR\n# Lexer [or tokenizer] definition with language lexemes [or tokens]\n@{%\n\nconst lexer = moo.compile({\n  separator:      /,/,\n  paramEnd:       /}/,\n  paramBegin:     /{/,\n  listEnd:        /\\]/,\n  listBegin:      /\\[/,\n  lambdaEnd:        /\\)/,\n  lambdaBegin:      /\\(/,\n  lambdaVarListEnd: /\\@/,\n  dacoutCh:       /\\>[0-9]+/,\n  dacout:         /\\>/,\n  variable1:       { match: /:[a-zA-Z0-9]+:/, value: x => x.slice(1,x.length-1)},\n  variable2:       { match: /[a-zA-Z0-9]+:/, value: x => x.slice(0,x.length-1)},\n  sample:         { match: /\\\\[a-zA-Z0-9]+/, lineBreaks: true, value: x => x.slice(1, x.length)},\n  slice:          { match: /\\|[a-zA-Z0-9]+/, lineBreaks: true, value: x => x.slice(1, x.length)},\n  stretch:        { match: /\\@[a-zA-Z0-9]+/, lineBreaks: true, value: x => x.slice(1, x.length)},\n  clockTrig:      /0t-?(?:[0-9]|[1-9][0-9]+)(?:\\.[0-9]+)?\\b/,\n  number:         /-?(?:[0-9]|[1-9][0-9]+)(?:\\.[0-9]+)?\\b/,\n  semicolon:      /;/,\n  funcName:       /[a-zA-Z][a-zA-Z0-9]*/,\n  string:         { match: /'[a-zA-Z0-9]+'/, value: x => x.slice(1,x.length-1)},\n  comment:        /\\/\\/[^\\n]*/,\n  ws:             { match: /\\s+/, lineBreaks: true},\n});\n\n%}\n\n# Pass your lexer object using the @lexer option\n@lexer lexer\n\n# Grammar definition in the Extended Backus Naur Form (EBNF)\nmain -> _ Statement _\n{% d => ( { '@lang' : d[1] } )  %}\n\nStatement ->\n  %comment _ Statement\n  {% d => d[2] %}\n\t|\n  Expression _ %semicolon _ Statement\n  {% d => [ { '@spawn': d[0] } ].concat(d[4]) %}\n  |\n  Expression _ %semicolon (_ %comment):*\n  {% d => [ { '@spawn': d[0] } ] %}\n\n\nExpression ->\n  ParameterList _ %funcName\n  {% d => sema.synth( d[2].value, d[0]['@params'] ) %}\n  |\n  ParameterList _ %sample\n  {% d => sema.synth( 'sampler', d[0]['@params'].concat( [ sema.str( d[2].value ) ] ) ) %}\n  |\n  ParameterList _ %slice\n  {% d => sema.synth( 'slice', d[0]['@params'].concat( [ sema.str( d[2].value ) ] ) ) %}\n  |\n  ParameterList _ %stretch\n  {% d => sema.synth( 'stretch', d[0]['@params'].concat( [ sema.str( d[2].value ) ] ) ) %}\n  |\n  Variable _ Expression\n  {% d => sema.setvar( d[0].value, d[2] ) %}\n  |\n  %dacout _ Expression\n  {% d => sema.synth( 'dac', [d[2]] ) %}\n  |\n  %dacoutCh _ Expression\n  {% d => sema.synth( 'dac', [d[2], sema.num(d[0].value.substr(1))] ) %}\n  |\n  Variable _ Lambda\n  {% d => sema.setvar( d[0].value, d[2] ) %}\n  |\n  ParameterList _ Variable\n  {% d => ( { '@lambdacall': {'params':d[0]['@params'], 'lambda':d[2] }} ) %}\n\n  \n  \nLambda ->\n  %lambdaBegin _ LambdaVarBlock _ Expression _ %lambdaEnd\n   {% d=> ({\n     \t'@lambda':\n     \t\t{'vars':d[2], \n             'tree':d[4]}\n  \t}) %}\n   \nLambdaVarBlock -> LambdaVarList _ %lambdaVarListEnd\n\t{% d => (d[0] ) %}\n    \nLambdaVarList -> \n  \t_\n     {% d=> [] %}\n     |\n\tVariable  \n\t{% d => ( [ d[0] ] ) %}\n    |\n  \tVariable _ %separator _ LambdaVarList\n  \t{% d => [ d[0] ].concat(d[4]) %}\n\n\nParameterList ->\n  %paramBegin Params %paramEnd\n  {% d => ( { 'paramBegin': d[0], '@params': d[1], 'paramEnd': d[2] } ) %}\n\t|\n\t%paramBegin _ %paramEnd\n  {% d => ( { 'paramBegin': d[0], '@params': [], 'paramEnd': d[2] } ) %}\n\n  \nParams ->\n  ParamElement\n  {% d => ( [ d[0] ] ) %}\n  |\n  ParamElement _ %separator _ Params\n  {% d => [ d[0] ].concat(d[4]) %}\n\nParamElement ->\n  %number\n  {% d => ( { '@num': d[0] } ) %}\n\t|\n\t%string\n  {% d => ( { '@string': d[0].value } ) %}\n  |\n  Expression\n  {% id %}\n  |\n  Variable\n  {% d => sema.getvar( d[0].value ) %}\n  |\n  %listBegin Params  %listEnd\n  {% d => ( { '@list': d[1] } )%}\n\nVariable -> %variable1 {% id %} | %variable2 {% id %}\n\n# Whitespace\n\n_  -> wschar:*\n{% function(d) {return null;} %}\n\n__ -> wschar:+\n{% function(d) {return null;} %}\n\nwschar -> %ws\n{% id %}\n"
    },
    "hasFocus": true
  },
  {
    "2": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 0,
      "w": 2,
      "h": 2
    },
    "3": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 0,
      "w": 2,
      "h": 2
    },
    "6": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 0,
      "w": 2,
      "h": 2
    },
    "8": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 0,
      "w": 2,
      "h": 2
    },
    "12": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 0,
      "w": 2,
      "h": 2,
      "id": "_bd4qgphj5"
    },
    "id": "_nx9yneq25",
		"data": {
			"id": "_nx9yneq25",
			"name": "hello world_au1enazhs_iwu2mp3lh_6l092dg1c_nx9yneq25",
			"type": "analyser",
			"lineNumbers": true,
			"hasFocus": false,
			"theme": "monokai",
			"background": "#f0f0f0",
			"mode": "both"
    },
    "hasFocus": false
  },
  {
    "2": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "3": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "6": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "8": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "12": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 2,
      "w": 2,
      "h": 2,
      "id": "_6wasl2cj1"
    },
    "id": "_6wasl2cj1",
    "data": {
      "id": "_6wasl2cj1",
      "type": "liveCodeParseOutput",
      "name": "liveCodeParseOutput_6wasl2cj1",
      "background": "rgba(25, 25, 25, 0.3)",
      "lineNumbers": true,
      "hasFocus": true,
      "theme": "icecoder"
    },
    "hasFocus": false
  },
  {
    "2": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "3": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "6": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "8": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "12": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 2,
      "w": 2,
      "h": 2,
      "id": "_rg0mg33rj"
    },
    "id": "_rg0mg33rj",
    "data": {
      "id": "_rg0mg33rj",
      "type": "dspCode",
      "name": "dspCode_rg0mg33rj",
      "background": "rgba(25, 25, 25, 0.3)",
      "lineNumbers": true,
      "hasFocus": true,
      "theme": "icecoder"
    },
    "hasFocus": false
  },
  {
    "2": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "3": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "6": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "8": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "12": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 0,
      "y": 4,
      "w": 2,
      "h": 2,
      "id": "_d1bgm7ykl"
    },
    "id": "_d1bgm7ykl",
    "data": {
      "id": "_d1bgm7ykl",
      "type": "grammarCompileOutput",
      "name": "grammarCompileOutput_d1bgm7ykl",
      "background": "rgba(20, 20, 20, 0.3)",
      "lineNumbers": true,
      "hasFocus": true,
      "theme": "icecoder"
    },
    "hasFocus": false
  },
  {
    "2": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "3": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "6": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "8": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "12": {
      "fixed": true,
      "resizable": false,
      "draggable": false,
      "customDragger": false,
      "customResizer": false,
      "min": {
        "w": 1,
        "h": 1
      },
      "max": {},
      "x": 2,
      "y": 4,
      "w": 2,
      "h": 2,
      "id": "_psh7buim8"
    },
    "id": "_psh7buim8",
    "data": {
      "id": "_psh7buim8",
      "type": "console",
      "name": "console_psh7buim8",
      "background": "rgba(20, 20, 20, 0.3)",
      "lineNumbers": true,
      "hasFocus": true,
      "theme": "icecoder"
    },
    "hasFocus": false
  }
]